/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9 */

#ifndef PB_UPROTOCOL_V1_UUID_PB_H_INCLUDED
#define PB_UPROTOCOL_V1_UUID_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* The UUID datamodel per https://www.rfc-editor.org/rfc/rfc9562[RFC 9562] */
typedef struct _uprotocol_v1_UUID {
    uint64_t msb; /* Most significant bits */
    uint64_t lsb; /* Least significant bits */
} uprotocol_v1_UUID;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define uprotocol_v1_UUID_init_default           {0, 0}
#define uprotocol_v1_UUID_init_zero              {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define uprotocol_v1_UUID_msb_tag                1
#define uprotocol_v1_UUID_lsb_tag                2

/* Struct field encoding specification for nanopb */
#define uprotocol_v1_UUID_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FIXED64,  msb,               1) \
X(a, STATIC,   SINGULAR, FIXED64,  lsb,               2)
#define uprotocol_v1_UUID_CALLBACK NULL
#define uprotocol_v1_UUID_DEFAULT NULL

extern const pb_msgdesc_t uprotocol_v1_UUID_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define uprotocol_v1_UUID_fields &uprotocol_v1_UUID_msg

/* Maximum encoded size of messages (where known) */
#define UPROTOCOL_V1_UUID_PB_H_MAX_SIZE          uprotocol_v1_UUID_size
#define uprotocol_v1_UUID_size                   18

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
