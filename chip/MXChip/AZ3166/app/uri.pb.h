/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9 */

#ifndef PB_UPROTOCOL_V1_URI_PB_H_INCLUDED
#define PB_UPROTOCOL_V1_URI_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* Data model definition for source and destination addressing of messages sent to/from
 devices, services, methods, topics, etc... */
typedef struct _uprotocol_v1_UUri {
    /* Authority Name.

 Could be the host name, ip address, device & domain names, etc.. */
    char authority_name[128];
    /* Software Entity (uEntity) Identifiers. */
    uint32_t ue_id;
    /* Software Entity (uEntity) major version number. */
    uint32_t ue_version_major;
    /* uEntity resource id.

 Identifier used to represent either a method, publish topic, or notification topic. */
    uint32_t resource_id;
} uprotocol_v1_UUri;

/* List of URIs that can be used for batching APIs. */
typedef struct _uprotocol_v1_UUriBatch {
    pb_callback_t uris;
} uprotocol_v1_UUriBatch;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define uprotocol_v1_UUri_init_default           {"", 0, 0, 0}
#define uprotocol_v1_UUriBatch_init_default      {{{NULL}, NULL}}
#define uprotocol_v1_UUri_init_zero              {"", 0, 0, 0}
#define uprotocol_v1_UUriBatch_init_zero         {{{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define uprotocol_v1_UUri_authority_name_tag     1
#define uprotocol_v1_UUri_ue_id_tag              2
#define uprotocol_v1_UUri_ue_version_major_tag   3
#define uprotocol_v1_UUri_resource_id_tag        4
#define uprotocol_v1_UUriBatch_uris_tag          1

/* Struct field encoding specification for nanopb */
#define uprotocol_v1_UUri_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   authority_name,    1) \
X(a, STATIC,   SINGULAR, UINT32,   ue_id,             2) \
X(a, STATIC,   SINGULAR, UINT32,   ue_version_major,   3) \
X(a, STATIC,   SINGULAR, UINT32,   resource_id,       4)
#define uprotocol_v1_UUri_CALLBACK NULL
#define uprotocol_v1_UUri_DEFAULT NULL

#define uprotocol_v1_UUriBatch_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  uris,              1)
#define uprotocol_v1_UUriBatch_CALLBACK pb_default_field_callback
#define uprotocol_v1_UUriBatch_DEFAULT NULL
#define uprotocol_v1_UUriBatch_uris_MSGTYPE uprotocol_v1_UUri

extern const pb_msgdesc_t uprotocol_v1_UUri_msg;
extern const pb_msgdesc_t uprotocol_v1_UUriBatch_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define uprotocol_v1_UUri_fields &uprotocol_v1_UUri_msg
#define uprotocol_v1_UUriBatch_fields &uprotocol_v1_UUriBatch_msg

/* Maximum encoded size of messages (where known) */
/* uprotocol_v1_UUriBatch_size depends on runtime parameters */
#define UPROTOCOL_V1_URI_PB_H_MAX_SIZE           uprotocol_v1_UUri_size
#define uprotocol_v1_UUri_size                   148

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
