/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9 */

#ifndef PB_UPROTOCOL_V1_UATTRIBUTES_PB_H_INCLUDED
#define PB_UPROTOCOL_V1_UATTRIBUTES_PB_H_INCLUDED
#include <pb.h>
#include "uri.pb.h"
#include "uuid.pb.h"
#include "ucode.pb.h"
#include "uoptions.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* uProtocol defines different types of messages.
 Using the message type, validation can be performed to ensure transport
 validity of the data in the {@link UAttributes}. */
typedef enum _uprotocol_v1_UMessageType {
    /* Unspecified message type */
    uprotocol_v1_UMessageType_UMESSAGE_TYPE_UNSPECIFIED = 0,
    /* Publish
 A message that is used to notify all interested consumers of an event that has occurred. */
    uprotocol_v1_UMessageType_UMESSAGE_TYPE_PUBLISH = 1,
    /* RPC Request
 A message that is used by a service consumer to invoke one of a service provider's methods with some input data, expecting the service
 provider to reply with a response message. */
    uprotocol_v1_UMessageType_UMESSAGE_TYPE_REQUEST = 2,
    /* RPC Response
 A message that is used by a service provider to send the outcome of processing a request message
 from a servcice consumer. */
    uprotocol_v1_UMessageType_UMESSAGE_TYPE_RESPONSE = 3,
    /* Notification
 A message that is used to inform a specific consumer about an event that has occurred. */
    uprotocol_v1_UMessageType_UMESSAGE_TYPE_NOTIFICATION = 4
} uprotocol_v1_UMessageType;

/* uProtocol Priority as defined in
 https://github.com/eclipse-uprotocol/up-spec/blob/main/basics/qos.adoc[uProtocol Prioritization] */
typedef enum _uprotocol_v1_UPriority {
    /* Unspecified priority */
    uprotocol_v1_UPriority_UPRIORITY_UNSPECIFIED = 0,
    /* Low Priority. No bandwidth assurance such as File Transfer. */
    uprotocol_v1_UPriority_UPRIORITY_CS0 = 1,
    /* Standard, undifferentiated application such as General (unclassified). */
    uprotocol_v1_UPriority_UPRIORITY_CS1 = 2,
    /* Operations, Administration, and Management such as Streamer messages (sub, connect, etcâ€¦) */
    uprotocol_v1_UPriority_UPRIORITY_CS2 = 3,
    /* Multimedia streaming such as Video Streaming */
    uprotocol_v1_UPriority_UPRIORITY_CS3 = 4,
    /* Real-time interactive such as High priority (rpc events) */
    uprotocol_v1_UPriority_UPRIORITY_CS4 = 5,
    /* Signaling such as Important */
    uprotocol_v1_UPriority_UPRIORITY_CS5 = 6,
    /* Network control such as Safety Critical */
    uprotocol_v1_UPriority_UPRIORITY_CS6 = 7
} uprotocol_v1_UPriority;

/* The format for the data stored in the UMessage. */
typedef enum _uprotocol_v1_UPayloadFormat {
    /* Payload format was not is not set,
 per specification, assumption is UPAYLOAD_FORMAT_PROTOBUF_WRAPPED_IN_ANY */
    uprotocol_v1_UPayloadFormat_UPAYLOAD_FORMAT_UNSPECIFIED = 0,
    /* Payload is an Any protobuf message that contains the packed payload */
    uprotocol_v1_UPayloadFormat_UPAYLOAD_FORMAT_PROTOBUF_WRAPPED_IN_ANY = 1,
    /* Protobuf serialization format */
    uprotocol_v1_UPayloadFormat_UPAYLOAD_FORMAT_PROTOBUF = 2,
    /* JSON serialization format */
    uprotocol_v1_UPayloadFormat_UPAYLOAD_FORMAT_JSON = 3,
    /* Basic SOME/IP serialization format */
    uprotocol_v1_UPayloadFormat_UPAYLOAD_FORMAT_SOMEIP = 4,
    /* SOME/IP TLV format */
    uprotocol_v1_UPayloadFormat_UPAYLOAD_FORMAT_SOMEIP_TLV = 5,
    /* RAW (binary) format */
    uprotocol_v1_UPayloadFormat_UPAYLOAD_FORMAT_RAW = 6,
    /* Text format */
    uprotocol_v1_UPayloadFormat_UPAYLOAD_FORMAT_TEXT = 7,
    /* Shared memory format */
    uprotocol_v1_UPayloadFormat_UPAYLOAD_FORMAT_SHM = 8
} uprotocol_v1_UPayloadFormat;

/* Struct definitions */
/* Metadata describing a particular message's purpose, content and processing requirements.
 Each type of message is described by a set of mandatory and optional attributes. */
typedef struct _uprotocol_v1_UAttributes {
    /* A unique message identifier. */
    bool has_id;
    uprotocol_v1_UUID id;
    /* This message's type which also indicates its purpose and determines contraints on the other properties. */
    uprotocol_v1_UMessageType type;
    /* The origin (address) of this message. */
    bool has_source;
    uprotocol_v1_UUri source;
    /* The destination (address) of this message. */
    bool has_sink;
    uprotocol_v1_UUri sink;
    /* The QoS level that this message should be processed/delivered with. */
    uprotocol_v1_UPriority priority;
    /* The amount of time (in milliseconds) after which this message MUST NOT be delivered/processed anymore. */
    bool has_ttl;
    uint32_t ttl;
    /* The service consumer's permission level. */
    bool has_permission_level;
    uint32_t permission_level;
    /* A UCode indicating an error that has occurred
 during the delivery of either an RPC Request or Response message. */
    bool has_commstatus;
    uprotocol_v1_UCode commstatus;
    /* The identifier that a service consumer can use to correlate an RPC Repsonse message with its RPC Request. */
    bool has_reqid;
    uprotocol_v1_UUID reqid;
    /* The service consumer's access token. */
    bool has_token;
    char token[128];
    /* A tracing identifier to use for correlating messages across the system.
 Intended to be compatible with https://github.com/cloudevents/spec/blob/main/cloudevents/extensions/distributed-tracing.md */
    bool has_traceparent;
    char traceparent[128];
    /* The format for the data stored in the UMessage. */
    uprotocol_v1_UPayloadFormat payload_format;
} uprotocol_v1_UAttributes;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _uprotocol_v1_UMessageType_MIN uprotocol_v1_UMessageType_UMESSAGE_TYPE_UNSPECIFIED
#define _uprotocol_v1_UMessageType_MAX uprotocol_v1_UMessageType_UMESSAGE_TYPE_NOTIFICATION
#define _uprotocol_v1_UMessageType_ARRAYSIZE ((uprotocol_v1_UMessageType)(uprotocol_v1_UMessageType_UMESSAGE_TYPE_NOTIFICATION+1))

#define _uprotocol_v1_UPriority_MIN uprotocol_v1_UPriority_UPRIORITY_UNSPECIFIED
#define _uprotocol_v1_UPriority_MAX uprotocol_v1_UPriority_UPRIORITY_CS6
#define _uprotocol_v1_UPriority_ARRAYSIZE ((uprotocol_v1_UPriority)(uprotocol_v1_UPriority_UPRIORITY_CS6+1))

#define _uprotocol_v1_UPayloadFormat_MIN uprotocol_v1_UPayloadFormat_UPAYLOAD_FORMAT_UNSPECIFIED
#define _uprotocol_v1_UPayloadFormat_MAX uprotocol_v1_UPayloadFormat_UPAYLOAD_FORMAT_SHM
#define _uprotocol_v1_UPayloadFormat_ARRAYSIZE ((uprotocol_v1_UPayloadFormat)(uprotocol_v1_UPayloadFormat_UPAYLOAD_FORMAT_SHM+1))

#define uprotocol_v1_UAttributes_type_ENUMTYPE uprotocol_v1_UMessageType
#define uprotocol_v1_UAttributes_priority_ENUMTYPE uprotocol_v1_UPriority
#define uprotocol_v1_UAttributes_commstatus_ENUMTYPE uprotocol_v1_UCode
#define uprotocol_v1_UAttributes_payload_format_ENUMTYPE uprotocol_v1_UPayloadFormat


/* Initializer values for message structs */
#define uprotocol_v1_UAttributes_init_default    {false, uprotocol_v1_UUID_init_default, _uprotocol_v1_UMessageType_MIN, false, uprotocol_v1_UUri_init_default, false, uprotocol_v1_UUri_init_default, _uprotocol_v1_UPriority_MIN, false, 0, false, 0, false, _uprotocol_v1_UCode_MIN, false, uprotocol_v1_UUID_init_default, false, "", false, "", _uprotocol_v1_UPayloadFormat_MIN}
#define uprotocol_v1_UAttributes_init_zero       {false, uprotocol_v1_UUID_init_zero, _uprotocol_v1_UMessageType_MIN, false, uprotocol_v1_UUri_init_zero, false, uprotocol_v1_UUri_init_zero, _uprotocol_v1_UPriority_MIN, false, 0, false, 0, false, _uprotocol_v1_UCode_MIN, false, uprotocol_v1_UUID_init_zero, false, "", false, "", _uprotocol_v1_UPayloadFormat_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define uprotocol_v1_UAttributes_id_tag          1
#define uprotocol_v1_UAttributes_type_tag        2
#define uprotocol_v1_UAttributes_source_tag      3
#define uprotocol_v1_UAttributes_sink_tag        4
#define uprotocol_v1_UAttributes_priority_tag    5
#define uprotocol_v1_UAttributes_ttl_tag         6
#define uprotocol_v1_UAttributes_permission_level_tag 7
#define uprotocol_v1_UAttributes_commstatus_tag  8
#define uprotocol_v1_UAttributes_reqid_tag       9
#define uprotocol_v1_UAttributes_token_tag       10
#define uprotocol_v1_UAttributes_traceparent_tag 11
#define uprotocol_v1_UAttributes_payload_format_tag 12

/* Struct field encoding specification for nanopb */
#define uprotocol_v1_UAttributes_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  id,                1) \
X(a, STATIC,   SINGULAR, UENUM,    type,              2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  source,            3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sink,              4) \
X(a, STATIC,   SINGULAR, UENUM,    priority,          5) \
X(a, STATIC,   OPTIONAL, UINT32,   ttl,               6) \
X(a, STATIC,   OPTIONAL, UINT32,   permission_level,   7) \
X(a, STATIC,   OPTIONAL, UENUM,    commstatus,        8) \
X(a, STATIC,   OPTIONAL, MESSAGE,  reqid,             9) \
X(a, STATIC,   OPTIONAL, STRING,   token,            10) \
X(a, STATIC,   OPTIONAL, STRING,   traceparent,      11) \
X(a, STATIC,   SINGULAR, UENUM,    payload_format,   12)
#define uprotocol_v1_UAttributes_CALLBACK NULL
#define uprotocol_v1_UAttributes_DEFAULT NULL
#define uprotocol_v1_UAttributes_id_MSGTYPE uprotocol_v1_UUID
#define uprotocol_v1_UAttributes_source_MSGTYPE uprotocol_v1_UUri
#define uprotocol_v1_UAttributes_sink_MSGTYPE uprotocol_v1_UUri
#define uprotocol_v1_UAttributes_reqid_MSGTYPE uprotocol_v1_UUID

extern const pb_msgdesc_t uprotocol_v1_UAttributes_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define uprotocol_v1_UAttributes_fields &uprotocol_v1_UAttributes_msg

/* Maximum encoded size of messages (where known) */
#define UPROTOCOL_V1_UATTRIBUTES_PB_H_MAX_SIZE   uprotocol_v1_UAttributes_size
#define uprotocol_v1_UAttributes_size            622

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
